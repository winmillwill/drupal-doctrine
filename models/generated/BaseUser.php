<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseUser extends Doctrine_Record
{

  public function setTableDefinition()
  {
    $this->setTableName('users');
    $this->hasColumn('uid', 'integer', 4, array (
  'primary' => true,
  'autoincrement' => true,
  'notnull' => true,
  'unsigned' => 1,
));

    $this->hasColumn('name', 'string', 60, array (
  'notnull' => true,
));

    $this->hasColumn('pass', 'string', 32, array (
  'notnull' => true,
));

    $this->hasColumn('mail', 'string', 64, array (
  'notnull' => false,
));

    $this->hasColumn('mode', 'integer', 1, array (
  'default' => 0,
  'notnull' => true,
));

    $this->hasColumn('sort', 'integer', 1, array (
  'default' => 0,
  'notnull' => false,
));

    $this->hasColumn('threshold', 'integer', 1, array (
  'default' => 0,
  'notnull' => false,
));

    $this->hasColumn('theme', 'string', 255, array (
  'notnull' => true,
));

    $this->hasColumn('signature', 'string', 255, array (
  'notnull' => true,
));

    $this->hasColumn('created', 'integer', 4, array (
  'default' => 0,
  'notnull' => true,
));

    $this->hasColumn('access', 'integer', 4, array (
  'default' => 0,
  'notnull' => true,
));

    $this->hasColumn('login', 'integer', 4, array (
  'default' => 0,
  'notnull' => true,
));

    $this->hasColumn('status', 'integer', 1, array (
  'default' => 0,
  'notnull' => true,
));

    $this->hasColumn('timezone', 'string', 8, array (
  'notnull' => false,
));

    $this->hasColumn('language', 'string', 12, array (
  'notnull' => true,
));

    $this->hasColumn('picture', 'string', 255, array (
  'notnull' => true,
));

    $this->hasColumn('init', 'string', 64, array (
  'notnull' => false,
));
    $this->hasColumn('data', 'string', 2147483647, array (
  'notnull' => false,
));
  }

  public function setUp()
  {
    $this->hasMany('Role as Roles', array('refClass' => 'UserRole',
                                          'local' => 'uid',
                                          'foreign' => 'rid'));

    $this->hasMany('Authmap', array('local' => 'uid',
                                    'foreign' => 'uid'));

    $this->hasMany('Comment as Comments', array('local' => 'uid',
                                                'foreign' => 'uid'));

    $this->hasMany('File as Files', array('local' => 'uid',
                                          'foreign' => 'uid'));

    $this->hasMany('History', array('local' => 'uid',
                                    'foreign' => 'uid'));

    $this->hasMany('Node as Nodes', array('local' => 'uid',
                                          'foreign' => 'uid'));

    $this->hasMany('NodeRevision as NodeRevisions', array('local' => 'uid',
                                                          'foreign' => 'uid'));

    $this->hasMany('NodeCommentStatistic as NodeCommentStatistics', array('local' => 'uid',
                                                                          'foreign' => 'last_comment_uid'));

    $this->hasMany('Session as Sessions', array('local' => 'uid',
                                                'foreign' => 'uid'));

    $this->hasMany('UserRole as UserRoles', array('local' => 'uid',
                                                  'foreign' => 'uid'));

    $this->hasMany('Watchdog as Watchdogs', array('local' => 'uid',
                                                  'foreign' => 'uid'));
  }

}